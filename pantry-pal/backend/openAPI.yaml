openapi: 3.0.0
info:
  title: Pantry Management API
  description: API to manage pantry items and recipes 
  version: 1.0.0
paths:
  /api/ingredients/pantry:
    get:
      summary: Get all pantry items for a user
      responses:
        '200':
          description: List of pantry items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
    post:
      summary: Add or update an ingredient in the pantry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '201':
          description: Pantry item added or updated
    delete:
      summary: Remove an ingredient from the pantry
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ingredientName:
                  type: string
      responses:
        '200':
          description: Pantry item removed
  /api/ingredients/shoppingList:
    get:
      summary: Get a user's shopping list
      responses:
        '200':
          description: List of shopping list items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingListItem'
    post:
      summary: Add or update an item in the shopping list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingListItem'
      responses:
        '201':
          description: Item added to shopping list
    delete:
      summary: Remove an item from the shopping list
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ingredientName:
                  type: string
      responses:
        '200':
          description: Shopping list item removed
  /api/recipes/favorites:
    get:
      summary: Get all favorite recipes for a user
      responses:
        '200':
          description: List of favorite recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavRecipe'
  /api/recipes/favorites/planned:
    get:
      summary: Get all planned favorite recipes for a user
      responses:
        '200':
          description: List of planned favorite recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavRecipe'
  /api/recipes/favorites/unplanned:
    get:
      summary: Get all unplanned favorite recipes for a user
      responses:
        '200':
          description: List of unplanned favorite recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavRecipe'
  /api/recipes/favorites/{recipeId}:
    get:
      summary: Get a specific favorite recipe by ID
      parameters:
        - ingredientName: recipeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Favorite recipe details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavRecipe'
  /api/recipes/spoonacular:
    get:
      summary: Find recipes given a list of ingredients
      responses:
        '200':
          description: List of recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
components:
  schemas:
    Ingredient:
      type: object
      properties:
        ingredientName:
          type: string
        purchaseDate:
          type: string
          format: date
          nullable: true
        expirationDate:
          type: string
          format: date
          nullable: true
        frozen:
          type: boolean
          default: false
    FavRecipe:
      type: object
      properties:
        ingredientName:
          type: string
          nullable: true
        ingredients:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Ingredient'
        directions:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        planned:
          type: boolean
          default: false
        date:
          type: string
          format: date
          nullable: true
    ShoppingListItem:
      type: object
      properties:
        ingredientName:
          type: string
    MealPlan:
      type: object
      properties:
        breakfast:
          type: string
          nullable: true
        lunch:
          type: string
          nullable: true
        dinner:
          type: string
          nullable: true
        snack:
          type: string
          nullable: true
    Recipe:
      type: object
      properties:
        title:
          type: string
        ingredients:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Ingredient'
        directions:
          type: string
        notes:
          type: string